@w:100px;
@h:100px;
@color:skyblue;
*{
	margin: 0;
	padding: 0;
}
/*
	多行注释可以显示
*/

//单行注释翻译到css中被删除了
div{
	margin-bottom: 10px;
}
.border-radius(@border-radius){//需要传参
	-webkit-border-radius:@border-radius;//谷歌
	-ms-border-radius:@border-radius;//ie
	-moz-border-radius:@border-radius;//火狐
	-o-border-radius:@border-radius;//欧朋
	border-radius:@border-radius;
}
.border-radius-def(@border-radius:10px){//默认可以不传参
	-webkit-border-radius:@border-radius;
	-ms-border-radius:@border-radius;
	-moz-border-radius:@border-radius;
	-o-border-radius:@border-radius;
	border-radius:@border-radius;
}


.box1{
	width:@w;
	height:@h;
	background:@color;
}
.box2{
	.box1;
	font-size: 20px;
}

.box3{
	.box1;
	.border-radius(50px);
}
.box4{
	.box1;
	.border-radius-def();
}
//基本三角形形成

.triangle{
	width: 0;
	height: 0;
	overflow: hidden;
	border-style: solid;
	border-width: 50px;
	border-color: red blue yellow pink;
}

//匹配模式
.triangle(top,@w:30px,@c:red){	
	border-width: @w;
	border-color: @c transparent transparent transparent;//透明色
}
.triangle(bottom,@w:30px,@c:red){	
	border-width: @w;
	border-color: transparent transparent @c transparent;
}
.triangle(left,@w:30px,@c:red){	
	border-width: @w;
	border-color: transparent transparent transparent @c;
}
.triangle(right,@w:30px,@c:red){	
	border-width: @w;
	border-color: transparent @c transparent transparent;
}
.triangle(@_,@w:30px,@c:red){//@_代表任意值 后面的参数不能省略
	width: 0;
	height: 0;
	overflow: hidden;
	border-style: solid;
}
.box5{
	.triangle(bottom,@w:100px,@c:blue);
}


//嵌套
.list{
	width: 100%;
	li{
		width: 100%;
		height: 50px;
		line-height: 50px;
		list-style: none;
		border-bottom: 1px dashed #ccc;
		padding: 10px;
		box-sizing: border-box;	
		a{
			font-size: 20px;
			float: left;
		}
		span{
			display: inline-block;
			float: right;
			font-size: 30px;
		}
		&:hover{
			background: red;
		}
	}

}

//运算
.fs(@s){
	// font-size: @s * 10px;
	// font-size: @s - 10px;
	font-size: @s + 10px;
	// font-size: @s / 10px;
}
.box6{
	.fs(10px);
}
//避免编译
.box7{
	font-size: ~'calc(50px - 10px)';
	width: ~'calc(100px - 20px)';
	height: ~'calc(100px - 20px)';
}
//给混合添加!important的话，混合中所有的属性都有!important
.box8{
	.box1 !important;
}
//设置样式的混合
.setStyle(@attr,@value){//属性  值
	@{attr}:unit(@value/10,px);
}
.box9{
	.setStyle(width,100);
	.setStyle(height,100);
}